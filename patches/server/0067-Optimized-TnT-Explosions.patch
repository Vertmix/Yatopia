Index: src/main/java/net/minecraft/world/level/Explosion.java
<+>UTF-8
===================================================================
diff --git a/src/main/java/net/minecraft/world/level/Explosion.java b/src/main/java/net/minecraft/world/level/Explosion.java
--- a/src/main/java/net/minecraft/world/level/Explosion.java    (revision b0a00af468eb4b3a47523131677f70b9a9a60f0f)
+++ b/src/main/java/net/minecraft/world/level/Explosion.java    (date 1623806913527)
@@ -38,6 +38,7 @@
 import net.minecraft.world.level.block.piston.BlockPistonExtension;
 import net.minecraft.world.level.block.piston.TileEntityPiston;
 import net.minecraft.world.level.block.state.IBlockData;
+import net.minecraft.world.level.chunk.Chunk;
 import net.minecraft.world.level.material.Fluid;
 import net.minecraft.world.level.storage.loot.LootTableInfo;
 import net.minecraft.world.level.storage.loot.parameters.LootContextParameters;
@@ -132,60 +133,73 @@
         // CraftBukkit end
         Set<BlockPosition> set = Sets.newHashSet();
         boolean flag = true;
+        final Chunk chunkAt = world.getChunkAt((int) posX >> 4, (int) posZ >> 4);
+        Block b = chunkAt.getType(new BlockPosition(posX, posY, posZ)).getBlock(); //  TacoSpigot - get block of the explosion
 
         int i;
         int j;
 
-        for (int k = 0; k < 16; ++k) {
-            for (i = 0; i < 16; ++i) {
-                for (j = 0; j < 16; ++j) {
-                    if (k == 0 || k == 15 || i == 0 || i == 15 || j == 0 || j == 15) {
-                        double d0 = (double) ((float) k / 15.0F * 2.0F - 1.0F);
-                        double d1 = (double) ((float) i / 15.0F * 2.0F - 1.0F);
-                        double d2 = (double) ((float) j / 15.0F * 2.0F - 1.0F);
-                        double d3 = Math.sqrt(d0 * d0 + d1 * d1 + d2 * d2);
+        if(!b.getBlockData().getMaterial().isLiquid()){ // TacoSpigot - skip calculation of what blocks to blow up in water/lava
+
+            for (int k = 0; k < 16; ++k) {
+                for (i = 0; i < 16; ++i) {
+                    for (j = 0; j < 16; ++j) {
+                        if (k == 0 || k == 15 || i == 0 || i == 15 || j == 0 || j == 15) {
+                            double d0 = (double) ((float) k / 15.0F * 2.0F - 1.0F);
+                            double d1 = (double) ((float) i / 15.0F * 2.0F - 1.0F);
+                            double d2 = (double) ((float) j / 15.0F * 2.0F - 1.0F);
+                            double d3 = Math.sqrt(d0 * d0 + d1 * d1 + d2 * d2);
 
-                        d0 /= d3;
-                        d1 /= d3;
-                        d2 /= d3;
-                        float f = this.size * (0.7F + this.world.random.nextFloat() * 0.6F);
-                        double d4 = this.posX;
-                        double d5 = this.posY;
-                        double d6 = this.posZ;
+                            d0 /= d3;
+                            d1 /= d3;
+                            d2 /= d3;
+                            float f = this.size * (0.7F + this.world.random.nextFloat() * 0.6F);
+                            double d4 = this.posX;
+                            double d5 = this.posY;
+                            double d6 = this.posZ;
 
-                        for (float f1 = 0.3F; f > 0.0F; f -= 0.22500001F) {
-                            BlockPosition blockposition = new BlockPosition(d4, d5, d6);
-                            IBlockData iblockdata = this.world.getType(blockposition);
-                            if (!iblockdata.isDestroyable()) continue; // Paper
-                            Fluid fluid = iblockdata.getFluid(); // Paper
-                            Optional<Float> optional = this.l.a(this, this.world, blockposition, iblockdata, fluid);
+                            for (float f1 = 0.3F; f > 0.0F; f -= 0.22500001F) {
+                                BlockPosition blockposition = new BlockPosition(d4, d5, d6);
+                                IBlockData iblockdata = this.world.getType(blockposition);
+                                if (!iblockdata.isDestroyable()) continue; // Paper
+                                Fluid fluid = iblockdata.getFluid(); // Paper
+
+                                Optional<Float> optional = this.l.a(this, this.world, blockposition, iblockdata, fluid);
 
-                            if (optional.isPresent()) {
-                                f -= ((Float) optional.get() + 0.3F) * 0.3F;
-                            }
+                                if(!iblockdata.getBlock().getBlockData().isAir()){
+                                    float f2 = optional.orElse(iblockdata.getBlock().getDurability()/5.0F);
+                                    f -= (f2 + 0.3F) * 0.3F;
+                                }
+
+
+                                if (optional.isPresent()) {
+                                    f -= ((Float) optional.get() + 0.3F) * 0.3F;
+                                }
 
-                            if (f > 0.0F && this.l.a(this, this.world, blockposition, iblockdata, f) && blockposition.getY() < 256 && blockposition.getY() >= 0) { // CraftBukkit - don't wrap explosions
-                                set.add(blockposition);
-                                // Paper start - prevent headless pistons from forming
-                                if (!com.destroystokyo.paper.PaperConfig.allowHeadlessPistons && iblockdata.getBlock() == Blocks.MOVING_PISTON) {
-                                    TileEntity extension = this.world.getTileEntity(blockposition);
-                                    if (extension instanceof TileEntityPiston && ((TileEntityPiston) extension).isHead()) {
-                                       EnumDirection direction = iblockdata.get(BlockPistonExtension.FACING);
-                                       set.add(blockposition.shift(direction.opposite()));
-                                    }
-                                }
-                                // Paper end
-                            }
+                                if (f > 0.0F && this.l.a(this, this.world, blockposition, iblockdata, f) && blockposition.getY() < 256 && blockposition.getY() >= 0) { // CraftBukkit - don't wrap explosions
+                                    set.add(blockposition);
+                                    // Paper start - prevent headless pistons from forming
+                                    if (!com.destroystokyo.paper.PaperConfig.allowHeadlessPistons && iblockdata.getBlock() == Blocks.MOVING_PISTON) {
+                                        TileEntity extension = this.world.getTileEntity(blockposition);
+                                        if (extension instanceof TileEntityPiston && ((TileEntityPiston) extension).isHead()) {
+                                            EnumDirection direction = iblockdata.get(BlockPistonExtension.FACING);
+                                            set.add(blockposition.shift(direction.opposite()));
+                                        }
+                                    }
+                                    // Paper end
+                                }
 
-                            d4 += d0 * 0.30000001192092896D;
-                            d5 += d1 * 0.30000001192092896D;
-                            d6 += d2 * 0.30000001192092896D;
-                        }
-                    }
-                }
-            }
-        }
+                                d4 += d0 * 0.30000001192092896D;
+                                d5 += d1 * 0.30000001192092896D;
+                                d6 += d2 * 0.30000001192092896D;
+                            }
+                        }
+                    }
+                }
+            }
 
+        }
+
         this.blocks.addAll(set);
         float f2 = this.size * 2.0F;
 
